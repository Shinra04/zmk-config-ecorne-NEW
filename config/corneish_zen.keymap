/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y           &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LSHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H           &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N           &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp LA(ESC)
                          &kp LALT  &mo 1  &kp SPACE    &lt 3 KP_ENTER  &mo 2  &kp LEFT_GUI
            >;
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 |SD_UL|   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC            &kp N1     &kp N2     &kp N3         &kp N4         &kp N5           &kp LA(LS(H))  &kp LS(H)              &kp LC(LA(GREATER_THAN))  &kp LS(V)                 &kp LA(LS(V))     &kp DEL
&kp LSHFT          &kp N6     &kp N7     &kp N8         &kp N9         &kp N0           &kp LESS_THAN  &kp LC(LS(LESS_THAN))  &kp LC(LA(LESS_THAN))     &kp LC(LS(GREATER_THAN))  &kp GREATER_THAN  &kp LC(LA(LS(K)))
&kp LC(BACKSLASH)  &kp LS(I)  &kp LC(K)  &kp LC(LA(C))  &kp LC(LA(V))  &kp LC(LS(R))    &kp RS(LC(V))  &kp LA(LS(LESS_THAN))  &kp LC(LA(T))             &kp LA(LS(GREATER_THAN))  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
                                         &kp LG(L)      &trans         &kp LS(LG(S))    &trans         &none                  &none
            >;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |SD_UL|     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB       &kp EXCL   &kp AT    &kp HASH   &kp DLLR  &kp PRCNT    &kp EQUAL  &kp PLUS   &kp UP         &kp LS(RC(O))  &kp LC(LS(P))  &kp BSPC
&kp CAPSLOCK  &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR     &kp MINUS  &kp LEFT   &kp DOWN       &kp RIGHT      &kp LESS_THAN  &kp GREATER_THAN
&trans        &none      &none     &none      &none     &none        &kp UNDER  &kp TILDE  &kp LC(LS(K))  &none          &kp BACKSLASH  &kp PIPE
                                   &trans     &trans    &trans       &trans     &trans     &none
            >;
        };

        Mods {
            bindings = <
&none  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &bt BT_PRV         &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3     &bt BT_NXT
&none  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &kp C_VOLUME_DOWN  &kp C_PREVIOUS  &kp C_PP       &kp C_NEXT     &kp C_VOLUME_UP  &none
&none  &kp F11  &kp F12  &none   &none   &none      &out OUT_TOG       &bt BT_DISC 0   &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3    &bt BT_CLR
                         &trans  &none   &none      &none              &none           &kp LC(LS(A))
            >;

            display-name = "MODS";
        };
    };
};
